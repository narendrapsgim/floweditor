.node {
  display: inline-grid;
  position: absolute;
  border-radius: 5px;
  min-width: max-content;
  min-height: max-content;
  padding: 5px;
  margin: 10px;
  grid-template-columns: max-content min-content max-content;
  grid-template-rows: 24px auto;
  grid-template-areas:
    "title title title"
    "input internals output";
  transition: cubic-bezier(0.645, 0.045, 0.355, 1) 200ms;
  transition-property: box-shadow, filter;
  box-shadow: 0;
  filter: 0;
  user-select: none;
  animation-name: circleEntrance;
  animation-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);
  animation-duration: 250ms;
  transform-origin: 50% 50%;
}

@keyframes circleEntrance {
  0% {
    clip-path: circle(0px);
  }

  100% {
    clip-path: circle(100%);
  }
}

.node.selected {
  box-shadow: 0 0 0 3px #47AA42;
}

.node.node-then {
  grid-template-columns: max-content auto max-content;
  grid-template-rows: auto;
  grid-template-areas:
    "input title output";
}

.nodeBackground {
  background: rgb(131, 131, 131);
  position: absolute;
  border-radius: inherit;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  pointer-events: none;
  clip-path: inset(26px 0 0 0);
  z-index: -1;
}

.node.cdk-drag-dragging {
  filter: drop-shadow(0 4px 5px rgba(0, 0, 0, 0.2));
  z-index: 1;
}

.internals {
  display: flex;
  flex-direction: column;
  justify-content: stretch;
}

.title {
  cursor: move;
  justify-content: space-between;
  user-select: none;
  grid-area: title;
  color: rgba(255, 255, 255, 0.5);
  line-height: 24px;
}

.title>div {
  transform: translateY(-3px);
}

.node-input .title {
  text-align: right;
}

.node-output .title {
  text-align: left;
}

.sockets {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.socket {
  word-wrap: normal;
  height: auto;
  min-height: 28px;
  min-width: max-content;
}

.node-then .socket {
  min-height: unset;
}

.circle {
  width: 14px;
  height: 14px;
  display: inline-block;
  border-radius: 100%;
  background: gray;
  transition: transform 100ms ease-out;
}

.circle:hover {
  transform: scale(1.1);
}

.label {
  font-size: 14px;
  color: white;
  font-style: italic;
  margin-left: 5px;
  margin-right: 5px;
}

.input {
  align-self: flex-start;
  text-align: right;
  transform: translateX(-9px);
}

.output {
  align-self: flex-end;
  text-align: left;
  transform: translateX(9px);
}

.node-input {
  border-top-left-radius: 50px;
  border-bottom-left-radius: 50px;
  padding-left: 25px;
  padding-bottom: 15px;
}


.node-input .title {
  text-align: right;
}

.node-input .input {
  display: none;
}

.node-output {
  border-top-right-radius: 50px;
  border-bottom-right-radius: 50px;
  padding-bottom: 15px;
  padding-right: 25px;
}

.node-output .output {
  display: none;
}

.node-then {
  max-width: 96px;
  max-height: 96px;
  min-width: 96px;
  min-height: 96px;

  border-radius: 50%;
}

.node-then .title {
  margin: auto;
  color: white;
  font-size: 1.2em;
  font-weight: bold;
  cursor: move;
}

.node-then .label {
  display: none;
}
